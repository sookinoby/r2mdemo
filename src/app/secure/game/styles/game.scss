@import "_functions";

$width: 400px;
$height: 304px;
$height_bigger: 340px;
$width_bigger:585px;

$height-reduced-2: 244px;
$max-tile-count: 4;
$max-tile-count-5: 5;
$tile-padding: 10px;
$tile-default-color: #EEE4DA;
$tile-question-color: #43CEFF;
$tile-wrong-color: #E0420D;
$tile-right-color : #00AF4F;
$tile-select-color : #CCC0DA;
$tile-right-not-select-color: #D8E4BC;
$white : #FFFFFF;
$green-color : #006400;
$red-color: #FF0000;
$default-color: #EEE4DA;
$blue-color:#3399ff;
$tile-font-size: 1.7em;
$tile-font-size-question: 1.7em;
$tile-font-color: #000000;
$tile-radius: 3px;
$tile-font: 'Open Sans', sans-serif;
$colors: #EEE4DA, #EAE0C8, #F59563, #3399ff, #ffa333, #cef030, #2b81d6;
$arrow-game-background : #C5D9F1;
$game-container-background: #bbada0;
$tile-background-color:lighten($white, 15%);

$text-color: #000000;
$bright-text-color: #f9f6f2;

$outer-game-box : #FDE9D9;
$outer-game-box-challenge : #E4DFEC;
$outer-game-box-select-stratergy : #BFF1AD;

// DON'T EDIT BELOW
$tile-size: ($width - $tile-padding * ($max-tile-count + 1)) / $max-tile-count;
$tile-size-wider: $tile-size * 2 + 10px ;
$tile-size-smaller: ($width - $tile-padding * ($max-tile-count-5 + 1)) / $max-tile-count-5;
$tile-size-smaller-input: $tile-size-smaller - 2;
$transition-time: 100ms;
$apperance-time2: 1s;
$apperance-time: 1s;
.container {
 //@include animation(appear $apperance-time 0s ease-in );
}

.animate-if {
}

.animate-if.ng-enter{
  @include animation(appear 0.5s 0s ease-in );
}



.animate-if.ng-leave{
  @include animation(disappear 0.5s 0s ease-in);
}



#game-container {
   position: relative;
   width: $width;
   height: $width;
   margin-left: 0px;
}

#game-container-2 {
   position: relative;
   width: $width;
   height: $height;
   margin-left: 0px;
}



.game-overlay {
   width: $width;
   height: $width;
   background-color: rgba(255, 255, 255, 0.47);
  line-height: 90px;
   position: absolute;
   top: 0;
   left: 0;
   z-index: 10;
   text-align: center;
   padding-top: 0%;
   font-size: 1.2em;

    span {
      display: inline-block;
      vertical-align: middle;
      line-height: normal;
    }

    &.darker {
      background-color: rgba(255, 255, 255, 0.95);
    }

    &.game-reduced-height-overlay {
    height: $height;
    }
    &.game-big-overlay {
      height:$height_bigger;
      width:$width_bigger;
      line-height: $height_bigger;
      background-color: rgba(255, 255, 255, 0.95);
  }

  &.game-reduced-height-overlay-2 {
    height:$height-reduced-2;
    line-height: $height-reduced-2;
  }

   .lower {
      display: block;
      margin-top: 29px;
      font-size: 16px;

      a {
         display: inline-block;
         background: #8f7a66;
         border-radius: 3px;
         padding: 0 20px;
         text-decoration: none;
         color: #f9f6f2;
         height: 40px;
         line-height: 42px;
         cursor: pointer;
         margin-left: 9px;
      }
   }
}


.tile-overlay-top {
  width: 380px;
  height: 70px;
  background-color: rgba(0, 0, 0, 0.50);
  @include border-radius($tile-radius);
  position: absolute;
  top: 9px;
  left: 10px;
  z-index: 10;
}



.tile-overlay-bottom {
  width: 380px;
  height: 70px;
  background-color: rgba(0, 0, 0, 0.75);
  @include border-radius($tile-radius);
  position: absolute;
  top: 165px;
  left: 10px;
  z-index: 10;
}


.tile-overlay-top-2 {
  width: 400px;
  height: 80px;
  // background-color: rgba(0, 0, 0, 0.40);
  background-color:$arrow-game-background;
  @include border-radius($tile-radius);
  position: absolute;
  top: 0px;
  left: 0px;
  z-index: 10;
}

.tile-overlay-bottom-2 {
  width: 400px;
  height: 80px;
  background-color:$arrow-game-background;
  @include border-radius($tile-radius);
  position: absolute;
  top: 165px;
  left: 0px;
  z-index: 10;
}








.text-color-green {
color:$green-color;
}

.text-color-red {
color:$red-color;
}

.background-color-blue {
 background-color:rgba($blue-color, .80);
}

.background-color-green {
 background-color:rgba($green-color, .80);
}

.background-color-red {
 background-color:rgba($red-color, .80);
}



.background-color-default {
 background-color:rgba($default-color,1.00);
}

.background-color-white {
 background-color:rgba($white,1.00);
}


.top-space-40 {
margin-top:40px;
}

#game {
  position: relative;
  padding: $tile-padding;
  cursor: default;
  background: $arrow-game-background;
  border-radius: 6px;
  width: $width;
  height: $width;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;

  .center-text {
    text-align: center;
    width: $width_bigger;
  }

  .center-text-both {
    text-align: center;
    width: $width_bigger;
    height: $height_bigger;
    padding-top:30px;

  }

  .input-size-flash {
    width: 70px;
    text-align: center;
    height: 70px;
    font-size: $tile-font-size-question;
    @include border-radius($tile-radius);
  }
  input[type=number]::-webkit-inner-spin-button,
  input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type=number] {
    -moz-appearance: textfield;
  }

&.game-reduced-height {
     height:$height;

}
  &.game-reduced-height-2 {
    height:$height-reduced-2;

  }
  &.game-big {
    height:$height_bigger;
    width:$width_bigger;
  }
  .grid-container {
    position: absolute;
    z-index: 1;
    margin: 0 auto;

    .grid-cell {
      width: $tile-size; //($width / $max-tile-count) - ($tile-padding + ($tile-radius * 2));
      height: $tile-size; //($width / $max-tile-count) - ($tile-padding + ($tile-radius * 2));
      margin-bottom: $tile-padding;
      margin-right: $tile-padding;
      background: $tile-background-color;
      float: left;
      @include border-radius($tile-radius);

      @include animation(appear $apperance-time 0s ease-in 1);
       &:last-child {
        margin-right: 0
      }
      &.grid-cell-wider {
        width: $tile-size-wider; //($width / $max-tile-count) - ($tile-padding + ($tile-radius * 2));
      }
      &.grid-cell-smaller{
        width: $tile-size-smaller; //($width / $max-tile-count) - ($tile-padding + ($tile-radius * 2));
        height:$tile-size-smaller;
      }
    }
  }

  .tile-container {
    position: absolute;
    z-index: 2;

    .tile {
      font-family: $tile-font;
      position: absolute;
      width: $tile-size;
      height: $tile-size;
      background: $tile-background-color;
      @include border-radius($tile-radius);

      // @include transition-property(transform);
      -webkit-transition-property: -webkit-transform;
      -moz-transition-property: -moz-transform;
      transition-property: transform;
      z-index: 2;

      &.tile-wider {
        width: $tile-size-wider;
      }
      &.tile-smaller {
        width: $tile-size-smaller;
        height:  $tile-size-smaller;
      }

      &.ng-enter {

      }
      &.ng-enter-active .tile-inner {
      }

      &.tile-merged .tile-inner {
        @include animation(pop 50ms ease-in);
      }
      &.tile-merged-add-active .tile-inner {
      }

      &.ng-remove .tile-inner {
        // @include animation(pop 200ms ease $transition-time);
      }

      @for $x from 1 through $max-tile-count {
        @for $y from 1 through $max-tile-count {
          $zeroOffsetX: $x - 1;
          $zeroOffsetY: $y - 1;
          $newX: ($tile-size) * ($zeroOffsetX) + ($tile-padding * $zeroOffsetX);
          $newY: ($tile-size) * ($zeroOffsetY) + ($tile-padding * $zeroOffsetY);
          $newX_wider: $tile-size-wider * ($zeroOffsetX) + ($tile-padding * $zeroOffsetX);
          @if $zeroOffsetX == 2 {
            $newX_wider: $tile-size-wider + $tile-size  + ($tile-padding * $zeroOffsetX);
          }
          &.position-#{$zeroOffsetX}-#{$zeroOffsetY} {
            @include transform(translate($newX, $newY));
            &.position2-#{$zeroOffsetX}-#{$zeroOffsetY} {
              @include transform(translate($newX_wider, $newY));
            }
          }
          &.position-#{$zeroOffsetX}-#{$zeroOffsetY}-add-active .tile-inner {
            // @include animation(appear 200ms ease);
            // @include animation-fill-mode(backwards);
          }
        }
      }

      @for $x from 1 through $max-tile-count-5 {
        @for $y from 1 through $max-tile-count-5 {
          $zeroOffsetX: $x - 1;
          $zeroOffsetY: $y - 1;
          $newX: ($tile-size-smaller) * ($zeroOffsetX) + ($tile-padding * $zeroOffsetX);
          $newY: ($tile-size-smaller) * ($zeroOffsetY) + ($tile-padding * $zeroOffsetY);

          &.position5-#{$zeroOffsetX}-#{$zeroOffsetY} {
            @include transform(translate($newX, $newY));
          }
       }
      }

     &.selected-answer .tile-inner {
         background: $tile-select-color;
        font-size:$tile-font-size-question;
       @include transition($transition-time ease-in-out);

      }
      .input-size {
        width: $tile-size-smaller-input;
        text-align: center;
        height: $tile-size-smaller-input;
        @include border-radius($tile-radius);
      }
      input[type=number]::-webkit-inner-spin-button,
      input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }

      input[type=number] {
        -moz-appearance: textfield;
      }

     &.tile-question .tile-inner {
         background: $tile-question-color;
         font-size: $tile-font-size-question;
       @include transition($transition-time ease-in-out);

      }

     &.right-answer .tile-inner {
         background: $tile-background-color;
         font-size:  $tile-font-size-question;
         color:  $tile-right-color;
       @include transition($transition-time ease-in-out);
      }

      &.wrong-answer .tile-inner {
         background: $tile-background-color;
         font-size: $tile-font-size-question;
         color: $red-color;
      }

        &.tile-right-not-selected .tile-inner {
         background: $tile-right-not-select-color;
         font-size: $tile-font-size;
          @include transition($transition-time ease-in-out);
      }

      &:last-child {
        margin-right: 0
      }

      .tile-inner {
        line-height: ($width/$max-tile-count) - $tile-padding;
        @include transition($transition-time ease-in-out);
        text-align: center;
        font-weight: bold;
        z-index: 10;
        font-size:  $tile-font-size;
        color:$tile-font-color;
        &.tile-inner-smaller {
          line-height: ($width/$max-tile-count-5) - $tile-padding;
        }
      }
    }
  }
}


